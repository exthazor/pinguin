"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    async end(giveawayRepo, msg) {
        await msg.fetch(); //fetch the message in case it is not cached when you restart the bot during the giveaway example 
        giveawayRepo.delete({ message: msg.id }); //delete the giveaway when the event has ended. You delete it by message.id which is our unique key in a way
        const reaction = await msg.reactions.cache.filter(r => r.emoji.name === 'ðŸŽ‰').first().fetch(); //fetch it just in case it is not cached
        await reaction.users.fetch(); //fetch all the users who have reacted
        const winner = reaction.users.cache.filter(w => !w.bot).random(); //filter out bots and pick a user at random
        const embed = msg.embeds[0];
        embed.setFooter("Giveaway Ended."); //edit the embed
        embed.setColor('#f44336'); //red
        embed.addField('Winner:', winner ? `${winner} (${winner.tag})` : "No winners this time everyone's a loser LMAO! :joy: ");
        msg.edit(embed); //place newly edited embed in the message to edit the message to show our winner!
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2l2ZWF3YXlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHVyZXMvZ2l2ZWF3YXlzL0dpdmVhd2F5TWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQU1BLGtCQUFlO0lBQ1gsS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFtQyxFQUFFLEdBQVk7UUFDdkQsTUFBTSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUEsQ0FBQyxrR0FBa0c7UUFDcEgsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQSxDQUFDLDRHQUE0RztRQUVySixNQUFNLFFBQVEsR0FBb0IsTUFBTSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQSxDQUFDLHdDQUF3QztRQUN2SixNQUFNLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUEsQ0FBRSxzQ0FBc0M7UUFDcEUsTUFBTSxNQUFNLEdBQVMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUEsQ0FBRSwyQ0FBMkM7UUFFbkgsTUFBTSxLQUFLLEdBQWlCLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDekMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBLENBQUUsZ0JBQWdCO1FBQ3BELEtBQUssQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUEsQ0FBRSxLQUFLO1FBQ2hDLEtBQUssQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEtBQUssTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxzREFBc0QsQ0FBQyxDQUFBO1FBQ3hILEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUEsQ0FBQyxpRkFBaUY7SUFDckcsQ0FBQztDQUNKLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyRmxhZ3MgfSBmcm9tICdkaXNjb3JkLmpzJ1xuaW1wb3J0IHsgTWVzc2FnZSwgTWVzc2FnZUVtYmVkLCBNZXNzYWdlUmVhY3Rpb24sIFVzZXIgfSBmcm9tICdkaXNjb3JkLmpzJ1xuaW1wb3J0IHsgZW5kaWFubmVzcyB9IGZyb20gJ29zJ1xuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJ3R5cGVvcm0nXG5pbXBvcnQgeyBHaXZlYXdheXMgfSBmcm9tICcuLi8uLi9tb2RlbHMvR2l2ZWF3YXlzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgYXN5bmMgZW5kKGdpdmVhd2F5UmVwbzogUmVwb3NpdG9yeTxHaXZlYXdheXM+LCBtc2c6IE1lc3NhZ2UpIHtcbiAgICAgICAgYXdhaXQgbXNnLmZldGNoKCkgLy9mZXRjaCB0aGUgbWVzc2FnZSBpbiBjYXNlIGl0IGlzIG5vdCBjYWNoZWQgd2hlbiB5b3UgcmVzdGFydCB0aGUgYm90IGR1cmluZyB0aGUgZ2l2ZWF3YXkgZXhhbXBsZSBcbiAgICAgICAgZ2l2ZWF3YXlSZXBvLmRlbGV0ZSh7IG1lc3NhZ2U6IG1zZy5pZCB9KSAvL2RlbGV0ZSB0aGUgZ2l2ZWF3YXkgd2hlbiB0aGUgZXZlbnQgaGFzIGVuZGVkLiBZb3UgZGVsZXRlIGl0IGJ5IG1lc3NhZ2UuaWQgd2hpY2ggaXMgb3VyIHVuaXF1ZSBrZXkgaW4gYSB3YXlcblxuICAgICAgICBjb25zdCByZWFjdGlvbjogTWVzc2FnZVJlYWN0aW9uID0gYXdhaXQgbXNnLnJlYWN0aW9ucy5jYWNoZS5maWx0ZXIociA9PiByLmVtb2ppLm5hbWUgPT09ICfwn46JJykuZmlyc3QoKS5mZXRjaCgpIC8vZmV0Y2ggaXQganVzdCBpbiBjYXNlIGl0IGlzIG5vdCBjYWNoZWRcbiAgICAgICAgYXdhaXQgcmVhY3Rpb24udXNlcnMuZmV0Y2goKSAgLy9mZXRjaCBhbGwgdGhlIHVzZXJzIHdobyBoYXZlIHJlYWN0ZWRcbiAgICAgICAgY29uc3Qgd2lubmVyOiBVc2VyID0gcmVhY3Rpb24udXNlcnMuY2FjaGUuZmlsdGVyKHcgPT4gIXcuYm90KS5yYW5kb20oKSAgLy9maWx0ZXIgb3V0IGJvdHMgYW5kIHBpY2sgYSB1c2VyIGF0IHJhbmRvbVxuXG4gICAgICAgIGNvbnN0IGVtYmVkOiBNZXNzYWdlRW1iZWQgPSBtc2cuZW1iZWRzWzBdXG4gICAgICAgIGVtYmVkLnNldEZvb3RlcihcIkdpdmVhd2F5IEVuZGVkLlwiKSAgLy9lZGl0IHRoZSBlbWJlZFxuICAgICAgICBlbWJlZC5zZXRDb2xvcignI2Y0NDMzNicpICAvL3JlZFxuICAgICAgICBlbWJlZC5hZGRGaWVsZCgnV2lubmVyOicsIHdpbm5lciA/IGAke3dpbm5lcn0gKCR7d2lubmVyLnRhZ30pYCA6IFwiTm8gd2lubmVycyB0aGlzIHRpbWUgZXZlcnlvbmUncyBhIGxvc2VyIExNQU8hIDpqb3k6IFwiKVxuICAgICAgICBtc2cuZWRpdChlbWJlZCkgLy9wbGFjZSBuZXdseSBlZGl0ZWQgZW1iZWQgaW4gdGhlIG1lc3NhZ2UgdG8gZWRpdCB0aGUgbWVzc2FnZSB0byBzaG93IG91ciB3aW5uZXIhXG4gICAgfVxufSJdfQ==